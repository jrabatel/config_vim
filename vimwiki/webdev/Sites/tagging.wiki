Scopes

Tag relations
 - same_as
 - specialization
 - generalization
 - opposed_to
 - related_to

Tag
 - translations

Syntax
 - fix the problem with using syntas-specific signs and non-working queries, e.g., 'eyes'
 - '-p' private tagging, if the tag is new, then it is a private tag as well
 - allow nested taggings
   - (tag1, tag2) are interpreted as nested tags
     - how to represent them in db?
       - a tagging can be associated with a tagging through 'nested_tagging'
 - when a multi-scope tag is saved, the corresponding scopes should be saved as well if they do not exist already
   - e.g., 'wearing:top:blue' should save (if doesn't exist) 'wearing:top' and 'wearing' and add the corresponding generalization/specialization relationships
 - how to use parentheses?
   - can be applied on a scope
     - e.g., "wearing:, [, hat, shirt:blue, glasses ]" --> will be interpreted as "wearing:hat, wearing:shirt, wearing:shirt:blue, wearing:glasses"
   - can be applied for nested taggings
     - e.g., "DC, [, wearing:shirt, feeling:happy, act:, [, smiling ]"

Scopes / searching:
 - sort tags by number of related taggings
 - in searching tags, when one or more tag has already been selected, then only propose tags in auto-completion that are already associated with previous tag(s)

Searching with tags
 - look for objects tagged with 'tag'
 - look for objects tagged with 'tag' or any specialization of 'tag'
 - look for objects tagged with 'tag',  or any specialization of 'tag', or tags that are 'same_as' 'tag'
 - look for objects tagged with { tag1, tag2, ..., tagn }

Translation problems
 - each tag is saved with a name which corresponds to a default language (i.e., a canonical representation)
 - some tags should also be associated to 

Model
 - locale             --> which language is it?
 - private?           --> can only be seen by owner
 - hidden_by_default? --> for some pictures that have to be filtered from searches by default
 - reputation
   - each time the object has been retrieved by searching this tag, add 1 point
   - each time another person added this tag to this object, add 1 point

UI
 - it should be possible to add some tags to several (checked) objects in a row
 - tag overview in list of tags 
   - each tag gives a popover when hover, which contains:
     - some images of objects tagged with the tag
     - the description
     - links to main actions: show, edit, delete
 - picture_tag partial:
   - should organize the tags by common scopes
     - in a tree structure
   - should show the tags by common scopes (and sorted by 'interest'; how?)

When saving, how to consider scopes?
 - all more general scopes should be saved as taggings
